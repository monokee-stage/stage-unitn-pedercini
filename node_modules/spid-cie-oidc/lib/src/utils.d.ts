import * as jose from "jose";
import Ajv from "ajv";
import { Configuration, HttpClient, JWKs } from "./configuration";
export declare function createJWS<Payload extends jose.JWTPayload>(payload: Payload, jwk: jose.JWK): Promise<string>;
export declare function verifyJWS(jws: string, public_jwks: JWKs): Promise<any>;
export declare function makeIat(): number;
export declare function makeExp(deltaSeconds?: number): number;
export declare function makeJti(): string;
export declare function generateRandomString(length: number): string;
export declare function getPrivateJWKforProvider(configuration: Configuration): jose.JWK;
export declare function inferAlgForJWK(jwk: jose.JWK): "RS256" | "ES256";
export declare function generateJWKS(): Promise<{
    public_jwks: {
        keys: jose.JWK[];
    };
    private_jwks: {
        keys: jose.JWK[];
    };
}>;
export declare function isValidURL(url: string): boolean;
export declare function isValidEmail(email: string): RegExpMatchArray | null;
export declare function isString(value: unknown): value is string;
export declare function isUndefined(value: unknown): value is undefined;
export declare function fileExists(path: string): Promise<boolean>;
export declare function readJSON<T = any>(path: string): Promise<T>;
export declare const undiciHttpClient: HttpClient;
export declare const ajv: Ajv;
//# sourceMappingURL=utils.d.ts.map